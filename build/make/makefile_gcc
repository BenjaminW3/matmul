# Compilers
CC		= gcc
NVCC	= nvcc

include makefile_incl

# Flags
COPTFLAGS	= -ftree-vectorize -unroll-loops #-ftree-vectorizer-verbose=3
	# -flto should be specified instead of -fwhole-program but -flto leads to a linker error saying "/tmp/ccvtefoN.ltrans2.ltrans.o:(.nvFatBinSegment+0x8): undefined reference to `fatbinData'"
	# -funroll-loops -fmodulo-sched -fmodulo-sched-allow-regmoves -fgcse-sm -fgcse-las -fgcse-after-reload -funsafe-loop-optimizations -fexpensive-optimizations -ftree-loop-distribution -ftree-loop-im -ftree-loop-ivcanon -fivopts 
	#	-> Do not have any measurable effect
	# -floop-interchange -floop-flatten -floop-parallelize-all
	#	-> Graphite loop optimizations can only be used if the libcloog-ppl0 package is installed
CFLAGS		= $(COMMONFLAGS) $(COPTFLAGS) -m64 -std=c99 -Wall -pedantic -fopenmp
NVCCFLAGS	= $(COMMONFLAGS) -m64 -arch=sm_35 --compiler-options "$(COPTFLAGS) -Wall -fopenmp" # -pedantic

# Print help message
help:
	@echo
	@echo "  To compile, choose one of the following:"
	@echo
	@echo "    make matmul"
	@echo "		builds the tests defined in config.h"
	@echo "    make matmulcu"
	@echo "		builds the tests defined in config.h with support for the CUDA tests"
	@echo "    make matmulmpi"
	@echo "		builds the tests defined in config.h with support for the MPI tests"
	@echo "    make matmulmpicu"
	@echo "		builds the tests defined in config.h with support for the MPI and CUDA tests"
	@echo
	@echo "  To clean use:"
	@echo
	@echo "    make clean"
	@echo

clean:
	rm -rf *o $(TARGET) $(TARGETCU) $(TARGETMPI) $(TARGETMPICU)

%.c.o: $(INCLUDES)
%.c.o: $(SOURCEDIR)%.c
	$(CC) $(CFLAGS) $(ADDITIONAL_COMPILER_OPTIONS) -c $< -o $@

%.cu.o: $(INCLUDES)
%.cu.o: $(INCLUDESCU)
%.cu.o: $(SOURCEDIR)%.cu
	$(NVCC) $(NVCCFLAGS) -c $< -o $@

$(TARGET): makefile_incl
$(TARGET): makefile_gcc
$(TARGET): $(OBJ)
	@echo "Link '$@':"
	$(LINK) $(OBJ) $(LIBS) -o $@ $(CFLAGS)

$(TARGETCU): makefile_incl
$(TARGETCU): makefile_gcc
$(TARGETCU): $(OBJ)
$(TARGETCU): $(OBJCU)
	@echo "Link '$@':"
	$(LINK) $(OBJ) $(OBJCU) $(LIBS) $(LIBSCU) -o $@ $(CFLAGS)

$(TARGETMPI): ADDITIONAL_COMPILER_OPTIONS = $(shell mpicc --showme:compile)
$(TARGETMPI): INCLUDES := INCLUDESMPI
$(TARGETMPI): makefile_incl
$(TARGETMPI): makefile_gcc
$(TARGETMPI): $(OBJ)
$(TARGETMPI): $(OBJMPI)
	@echo "Link '$@':"
	$(LINK) $(OBJ) $(OBJMPI) $(LIBS) $(shell mpicc --showme:link) -o $@ $(CFLAGS)

$(TARGETMPICU): ADDITIONAL_COMPILER_OPTIONS = $(shell mpicc --showme:compile)
$(TARGETMPICU): INCLUDES := INCLUDESMPI
$(TARGETMPICU): makefile_incl
$(TARGETMPICU): makefile_gcc
$(TARGETMPICU): $(OBJ)
$(TARGETMPICU): $(OBJMPI)
$(TARGETMPICU): $(OBJCU)
	@echo "Link '$@':"
	$(LINK) $(OBJ) $(OBJMPI) $(OBJCU) $(LIBS) $(LIBSCU) $(shell mpicc --showme:link) -o $@ $(CFLAGS)
